on:
  push:
    paths-ignore:
      - 'README.md'
  workflow_dispatch:
    inputs:
      environmentselector:
        description: 'Environment selector'
        required: false
        default: 'default'

jobs:
  setup:
    name: Choose Secrets Environment Job
    runs-on: windows-latest
    steps:
      - id: setup
        name: Setup Environment Setp
        run: |
          $envSelector = "${{ github.event.inputs.environmentselector }}"
          Write-Host "Environment Selector: $envSelector Branch ${{ github.ref }}"
          if ($envSelector -eq '' -or $envSelector -eq 'default') {            
            if ('${{ github.ref }}' -eq 'refs/heads/main') { 
              "build_env=prod" >> $env:GITHUB_ENV              
            } else {
              "build_env=dev" >> $env:GITHUB_ENV
            }
          } else {
            "build_env=$envSelector" >> $env:GITHUB_ENV
          }
    outputs:
      build_env: ${{ env.build_env }}

  cd_deploy:
    name: Deploy Azure Environment
    needs: setup
    environment: ${{ needs.setup.outputs.build_env }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Azure CLI Login for ${{ needs.setup.outputs.build_env }}
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - id: resolve-shared-resources
        name: Resolve shared resources
        working-directory: .\deployment
        run: |
          .\ResolveSharedResources.ps1

      - name: Build azure environment
        id: build_az_env
        uses: azure/arm-deploy@v1
        with:
          deploymentName: 'deploy-${{ needs.setup.outputs.build_env }}-${{ github.run_number }}'
          resourceGroupName: ${{ env.appResourceGroup }}
          template: ./deployment/deploy.bicep
          failOnStdErr: false
          parameters: >
            prefix=${{ vars.PREFIX }}
            appEnvironment=${{ needs.setup.outputs.build_env }}            
            urlStorageConnection=${{ secrets.URLSTORAGECONNECTION }}
            apiKey=${{ secrets.APIKEY }}
            allowedIPList=${{ vars.ALLOWEDIPLIST }}

      - id: deploy
        name: Deploy code
        run: .\Deployment\Deploy.ps1 -ResourceGroupName ${{ env.appResourceGroup }} -AppName ${{ steps.build_az_env.outputs.funcName }}

      - id: smoke-test
        name: Smoke test
        run: |
          az functionapp config appsettings set --name $AppName --resource-group ${{ steps.build_az_env.outputs.funcName }} --settings "SMOKE_TEST=true"
          dotnet test -e X_URL=${{ env.base_url }} -e X_API_KEY=${{ secrets.APIKEY }}
          az functionapp config appsettings set --name $AppName --resource-group ${{ steps.build_az_env.outputs.funcName }} --settings "SMOKE_TEST=false"